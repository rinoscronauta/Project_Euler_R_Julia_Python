[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Project Euler with R, Julia and Python",
    "section": "",
    "text": "Preface\nSolving the problems in https://projecteuler.net/archives using the 3 main data science languages."
  },
  {
    "objectID": "p1_10.html#problem-1",
    "href": "p1_10.html#problem-1",
    "title": "1  Problems 1-10",
    "section": "Problem 1",
    "text": "Problem 1\n\n\n\n\n\n\nProblem\n\n\n\n\nIf we list all the natural numbers below \\(10\\) that are multiples of \\(3\\) or \\(5\\), we get \\(3, 5, 6\\) and \\(9\\). The sum of these multiples is \\(23\\).\n\n\nFind the sum of all the multiples of \\(3\\) or \\(5\\) below \\(1000\\).\n\n\n\n\nJulia\n\nfunction p1()\n  [x for x ∈ 1:1000 if (x % 3 == 0 || x % 5 == 0)] |&gt; sum\nend;\n\np1()\n\n234168\n\n\n\nusing BenchmarkTools;\n@benchmark p1()\n\nBenchmarkTools.Trial: 10000 samples with 8 evaluations.\n Range (min … max):  3.586 μs … 204.244 μs  ┊ GC (min … max): 0.00% … 95.27%\n Time  (median):     3.733 μs               ┊ GC (median):    0.00%\n Time  (mean ± σ):   4.270 μs ±   4.877 μs  ┊ GC (mean ± σ):  3.87% ±  3.40%\n\n  ▃▇█▇▆▄▃▂▁▁▁▁ ▁         ▁▂▃▄▄▄▄▃▃▂▂▂▃▂▂▂▂▂▁                  ▂\n  ████████████████▇▇▇▇▅▆▇███████████████████████▇████▇█▇▆▆▇▆▆ █\n  3.59 μs      Histogram: log(frequency) by time      5.82 μs &lt;\n\n Memory estimate: 7.61 KiB, allocs estimate: 6.\n\n\n\n\nR\n\np1 = function() {\n  1+1\n}\n\np1()\n\n[1] 2\n\n\n\nbench::mark(p1(), iterations = 10)\n\n# A tibble: 1 × 6\n  expression      min   median `itr/sec` mem_alloc `gc/sec`\n  &lt;bch:expr&gt; &lt;bch:tm&gt; &lt;bch:tm&gt;     &lt;dbl&gt; &lt;bch:byt&gt;    &lt;dbl&gt;\n1 p1()          190ns    220ns  2697759.    8.19KB        0\n\n\n\n\nPython\n\n1+1\n\n2"
  },
  {
    "objectID": "p1_10.html#problem-2",
    "href": "p1_10.html#problem-2",
    "title": "1  Problems 1-10",
    "section": "Problem 2",
    "text": "Problem 2\n\n\n\n\n\n\nProblem\n\n\n\n\nEach new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with \\(1\\) and \\(2\\), the first \\(10\\) terms will be: \\[1, 2, 3, 5, 8, 13, 21, 34, 55, 89, \\dots\\]\n\n\nBy considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.\n\n\n\n\nJulia\n\nfunction p2()\n    fibo = [1, 2]\n    while true\n        current_fibo_term = fibo[end] + fibo[end - 1]\n        if current_fibo_term &lt; 4_000_000\n            push!(fibo, current_fibo_term)\n        else \n            break\n        end        \n    end\n    \n    return [x for x ∈ fibo if iseven(x)] |&gt; sum\nend;\np2()\n\n4613732\n\n\n\nusing BenchmarkTools;\n@benchmark p2()\n\nBenchmarkTools.Trial: 10000 samples with 218 evaluations.\n Range (min … max):  337.009 ns …  10.698 μs  ┊ GC (min … max): 0.00% … 92.70%\n Time  (median):     344.780 ns               ┊ GC (median):    0.00%\n Time  (mean ± σ):   385.827 ns ± 529.089 ns  ┊ GC (mean ± σ):  9.13% ±  6.38%\n\n  ▄▇█▇▅▃▂▂▁                                                     ▂\n  ███████████▇▇▆▆▆▄▅▄▄▅▃▄▄▄▅▁▅▅▄▅▅▄▅▅▄▄▃▃▅▄▅▅▆▇▆▇▆▇▆▆▆▇▆▆▆▅▅▅▅▅ █\n  337 ns        Histogram: log(frequency) by time        517 ns &lt;\n\n Memory estimate: 1.02 KiB, allocs estimate: 7."
  },
  {
    "objectID": "p1_10.html#problem-5",
    "href": "p1_10.html#problem-5",
    "title": "1  Problems 1-10",
    "section": "Problem 5",
    "text": "Problem 5\n\n\n\n\n\n\nProblem\n\n\n\n\n\\(2520\\) is the smallest number that can be divided by each of the numbers from \\(1\\) to \\(10\\) without any remainder.\n\n\nWhat is the smallest positive number that is evenly divisibledivisible with no remainder by all of the numbers from \\(1\\) to \\(20\\)?\n\n\n\n\nJulia\n\nfunction sieve_of_eratosthenes(n::Integer)\n    sieve = trues(n)  # Create a boolean array to mark primes\n\n    # Set the multiples of primes as false (not prime)\n    for i in 2:isqrt(n)\n        if sieve[i]\n            for j in i^2:i:n\n                sieve[j] = false\n            end\n        end\n    end\n\n    primes = filter(x -&gt; sieve[x], 2:n)  # Filter out non-primes\n\n    return primes\nend;\n\nfunction p5()\n    n = 600851475143\n    \n    possible_primes = sieve_of_eratosthenes(isqrt(n))\n\n    id = findlast(x -&gt; n % x == 0, possible_primes)    \n    return possible_primes[id]\nend;\n\np5()\n\n6857\n\n\n\nusing BenchmarkTools;\n@benchmark p5()\n\nBenchmarkTools.Trial: 2010 samples with 1 evaluation.\n Range (min … max):  2.275 ms …   6.738 ms  ┊ GC (min … max): 0.00% … 0.00%\n Time  (median):     2.449 ms               ┊ GC (median):    0.00%\n Time  (mean ± σ):   2.487 ms ± 181.545 μs  ┊ GC (mean ± σ):  0.66% ± 1.70%\n\n                  ▁█▃                                          \n  ▁▁▁▃▃▂▂▂▂▂▂▃▃▂▃▄███▆▄▅▄▄▃▃▃▄▆▆▄▄▂▂▂▂▃▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▂▁▁▁ ▂\n  2.27 ms         Histogram: frequency by time        2.78 ms &lt;\n\n Memory estimate: 6.48 MiB, allocs estimate: 8."
  },
  {
    "objectID": "p1_10.html#problem-8",
    "href": "p1_10.html#problem-8",
    "title": "1  Problems 1-10",
    "section": "Problem 8",
    "text": "Problem 8\n\n\n\n\n\n\nProblem\n\n\n\n\nThe four adjacent digits in the \\(1000\\)-digit number that have the greatest product are \\(9 \\times 9 \\times 8 \\times 9 = 5832\\).\n\n\n73167176531330624919225119674426574742355349194934 96983520312774506326239578318016984801869478851843 85861560789112949495459501737958331952853208805511 12540698747158523863050715693290963295227443043557 66896648950445244523161731856403098711121722383113 62229893423380308135336276614282806444486645238749 30358907296290491560440772390713810515859307960866 70172427121883998797908792274921901699720888093776 65727333001053367881220235421809751254540594752243 52584907711670556013604839586446706324415722155397 53697817977846174064955149290862569321978468622482 83972241375657056057490261407972968652414535100474 82166370484403199890008895243450658541227588666881 16427171479924442928230863465674813919123162824586 17866458359124566529476545682848912883142607690042 24219022671055626321111109370544217506941658960408 07198403850962455444362981230987879927244284909188 84580156166097919133875499200524063689912560717606 05886116467109405077541002256983155200055935729725 71636269561882670428252483600823257530420752963450\n\n\nFind the thirteen adjacent digits in the \\(1000\\)-digit number that have the greatest product. What is the value of this product?"
  },
  {
    "objectID": "p1_10.html#problem-9",
    "href": "p1_10.html#problem-9",
    "title": "1  Problems 1-10",
    "section": "Problem 9",
    "text": "Problem 9\n\n\n\n\n\n\nProblem\n\n\n\n\nA Pythagorean triplet is a set of three natural numbers, \\(a \\lt b \\lt c\\), for which, \\[a^2 + b^2 = c^2.\\]\n\n\nFor example, \\(3^2 + 4^2 = 9 + 16 = 25 = 5^2\\).\n\n\nThere exists exactly one Pythagorean triplet for which \\(a + b + c = 1000\\).Find the product \\(abc\\)."
  },
  {
    "objectID": "p1_10.html#problem-10",
    "href": "p1_10.html#problem-10",
    "title": "1  Problems 1-10",
    "section": "Problem 10",
    "text": "Problem 10\n\n\n\n\n\n\nProblem\n\n\n\n\nThe sum of the primes below \\(10\\) is \\(2 + 3 + 5 + 7 = 17\\).\n\n\nFind the sum of all the primes below two million."
  }
]